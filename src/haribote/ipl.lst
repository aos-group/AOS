     1                                  ; hello-os
     2                                  ; TAB=4
     3                                  
     4                                  	SECS	equ		720		; 加载扇区的数量
     5                                  
     6                                  	VBEMODE	equ		0x105 			; 1024 * 768 * 8bit 颜色
     7                                  
     8                                  	BOTPAK	equ		0x00280000		; bootpack 加载目标
     9                                  	DSKCAC	equ		0x00100200		; 磁盘缓冲位置
    10                                  	DSKCAC0	equ		0x00008000		; 磁盘缓冲位置 (实模式)
    11                                  
    12                                  ; 有关 BOOT_INFO
    13                                  	CYLS	equ		0x0ff0			; ipl 读取结束时的扇区号的存储地址
    14                                  	LEDS	equ		0x0ff1
    15                                  
    16                                  	org	0x7c00				; 指明程序的装载地址
    17                                  
    18                                  ; 以下这段是标准 FAT12 格式软盘专用的代码
    19                                  	
    20 00000000 EB3C                    	jmp	entry
    21 00000002 90                      	db	0x90
    22 00000003 48415249424F5445        	db	"HARIBOTE"			; 启动区的名称，8字节
    23 0000000B 0002                    	dw	512					; 扇区大小/字节
    24 0000000D 01                      	db	1					; 簇(分配的最小单位)的大小
    25 0000000E 0100                    	dw	1					; FAT 的起始位置 (一般从第一个扇区开始)
    26                                  			; 第一行结束
    27 00000010 02                      	db	2					; FAT 的个数 (固定)
    28 00000011 E000                    	dw	224					; 根目录的大小/项 (默认)
    29 00000013 400B                    	dw	2880				; 磁盘的大小/扇区 (固定)
    30 00000015 F0                      	db	0xf0 				; 磁盘的种类 (固定)
    31 00000016 0900                    	dw	9					; FAT 的长度/扇区 (固定)
    32 00000018 1200                    	dw	18					; 1 个磁道的扇区数 (固定)
    33 0000001A 0200                    	dw	2					; 磁头数 (固定)
    34 0000001C 00000000                	dd	0					; 不使用分区
    35                                  			; 第二行结束
    36 00000020 400B0000                	dd	2880				; 重写一次磁盘大小
    37 00000024 000029                  	db	0x00, 0x00, 0x29	; 固定
    38 00000027 FFFFFFFF                	dd	0xffffffff			; 卷标号码
    39 0000002B 48415249424F54454F-     	db	"HARIBOTEOS "		; 磁盘的名称 (11 字节)
    40 00000034 5320               
    41 00000036 4641543132202020        	db	"FAT12   "			; 磁盘格式名称 (8 字节)
    42                                  
    43                                  ; 程序主体
    44                                  entry:
    45                                  ;-----------------------------------------------------------------------------------------------------
    46                                  ;-----------------------------------         关闭一切中断        --------------------------------------
    47                                  ;-----------------------------------------------------------------------------------------------------
    48                                  
    49                                  ; ; 用 BIOS 取得键盘上各种 LED 指示灯的状态
    50                                  ; 	mov ah, 0x02
    51                                  ; 	int 0x16
    52                                  ; 	mov [LEDS], al
    53                                  
    54                                  ; PIC 关闭一切中断
    55                                  ; 	根据 AT 兼容机的规格，如果要初始化 PIC,
    56                                  ;	必须在 cli 之前进行，否则有时会挂起
    57                                  ; 	随后进行 PIC 的初始化
    58 0000003E B0FF                    	mov al, 0xff
    59 00000040 E621                    	out 0x21, al			; 禁止主 PIC 的全部中断
    60 00000042 90                      	nop						; 如果连续执行 out 指令，有些机种会无法正常运行
    61 00000043 E6A1                    	out 0xa1, al			; 禁止从 PIC 的全部中断
    62                                  
    63                                  ;-----------------------------------------------------------------------------------------------------
    64                                  ;-----------------------------------         进入保护模式        --------------------------------------
    65                                  ;-----------------------------------------------------------------------------------------------------
    66                                  
    67 00000045 FA                      	cli						; 禁止 CPU 级别的中断
    68                                  
    69                                  ; 为了让 CPU 能够访问 1MB 以上的内存空间，设定 A20 GATE
    70 00000046 E8E100                  	call waitkbdout
    71 00000049 B0D1                    	mov al, 0xd1
    72 0000004B E664                    	out 0x64, al
    73 0000004D E8DA00                  	call waitkbdout
    74 00000050 B0DF                    	mov al, 0xdf			; enable A20
    75 00000052 E660                    	out 0x60, al
    76 00000054 E8D300                  	call waitkbdout
    77                                  
    78                                  ; 切换到保护模式
    79 00000057 0F0116[6A01]            	lgdt [GDTR0]			; 设定临时 GDT
    80 0000005C 0F20C0                  	mov eax, cr0
    81 0000005F 6625FFFFFF7F            	and eax, 0x7fffffff		; 禁止分页
    82 00000065 6683C801                	or eax, 0x00000001		; 切换到保护模式
    83 00000069 0F22C0                  	mov cr0, eax
    84 0000006C EB00                    	jmp pipelineflush
    85                                  
    86                                  pipelineflush:
    87 0000006E B80800                  	mov ax, 1 * 8
    88 00000071 8ED8                    	mov ds, ax
    89 00000073 8EC0                    	mov es, ax
    90 00000075 8EE0                    	mov fs, ax
    91 00000077 8EE8                    	mov gs, ax
    92 00000079 8ED0                    	mov ss, ax
    93                                  
    94                                  ;-----------------------------------------------------------------------------------------------------
    95                                  ;-------------------------------------         读取磁盘        ----------------------------------------
    96                                  ;-----------------------------------------------------------------------------------------------------
    97                                  
    98                                  ; 读磁盘
    99 0000007B 66BB01000000            	mov ebx, 1
   100 00000081 66BF00021000            	mov edi, DSKCAC
   101                                  readloop:
   102 00000087 E85D00                  	call readsect
   103 0000008A 6643                    	inc ebx
   104 0000008C 6681FBD0020000          	cmp ebx, SECS
   105 00000093 72F2                    	jb readloop
   106                                  
   107                                  ;-----------------------------------------------------------------------------------------------------
   108                                  ;-----------------------------------           内存复制          --------------------------------------
   109                                  ;-----------------------------------------------------------------------------------------------------
   110                                  
   111                                  ; 从 bootpack 的地址开始的 512KB 内容复制到 0x00280000 号地址去
   112 00000095 66BE00421000            	mov esi, 0x00104200
   113 0000009B 66BF00002800            	mov edi, BOTPAK
   114 000000A1 66B900000200            	mov ecx, 512 * 1024 / 4
   115 000000A7 E88900                  	call memcpy
   116                                  
   117                                  ; bootpack 的启动
   118 000000AA 66BB00002800            	mov ebx, BOTPAK
   119 000000B0 66678B4B10              	mov ecx, [ebx + 16]		; 0x11a8, hrb 文件内数据部分的大小
   120 000000B5 6683C103                	add ecx, 3
   121 000000B9 66C1E902                	shr ecx, 2				; ecx 对 4 向上取整
   122 000000BD 7410                    	jz skip
   123 000000BF 66678B7314              	mov esi, [ebx + 20]		; 0x10c8, hrb 文件内数据部分从哪里开始
   124 000000C4 6601DE                  	add esi, ebx
   125 000000C7 66678B7B0C              	mov edi, [ebx + 12]		; 0x00310000, ESP 初始值 & 数据部分传送目的地址
   126 000000CC E86400                  	call memcpy				; 将 bootpack.hrb 第 0x10c8 字节开始的 0x11a8 字节复制到 0x00310000 号地址
   127                                  skip:
   128 000000CF 66678B630C              	mov esp, [ebx + 12]
   129 000000D4 66EA1B0000001000        	jmp dword 2 * 8: 0x0000001b
   130                                  
   131                                  waitdisk:					; wait for disk ready
   132 000000DC BAF701                  	mov dx, 0x1f7
   133                                  .wait
   134 000000DF EC                      	in al, dx
   135 000000E0 2488                    	and al, 0x88	; 第 4 位为 1 表示硬盘控制器已准备好数据传输，第 7 位为 1 表示硬盘忙
   136 000000E2 3C08                    	cmp al, 0x08
   137 000000E4 75F9                    	jnz .wait
   138 000000E6 C3                      	ret
   139                                  
   140                                  readsect:
   141                                  	; edi: 目的地址
   142                                  	; ebx: 扇区号
   143                                  	; call waitdisk
   144                                  
   145                                  ; 1. 设置要读取的扇区数
   146 000000E7 BAF201                  	mov dx, 0x1f2
   147 000000EA B001                    	mov al, 1	; 读取的扇区数
   148 000000EC EE                      	out dx, al
   149                                  
   150                                  ; 2. 将 LBA 地址存入 0x1f3 ~ 0x1f6
   151 000000ED 6689D8                  	mov eax, ebx
   152                                  
   153                                  	; LBA 地址 7 ~ 0 位写入端口 0x1f3
   154 000000F0 BAF301                  	mov dx, 0x1f3
   155 000000F3 EE                      	out dx, al
   156                                  
   157                                  	; LBA 地址 15 ~ 8 位写入端口 0x1f4
   158 000000F4 BAF401                  	mov dx, 0x1f4
   159 000000F7 66C1E808                	shr eax, 8
   160 000000FB EE                      	out dx, al
   161                                  
   162                                  	; LBA 地址 23 ~ 16 位写入端口 0x1f5
   163 000000FC BAF501                  	mov dx, 0x1f5
   164 000000FF 66C1E808                	shr eax, 8
   165 00000103 EE                      	out dx, al
   166                                  
   167 00000104 BAF601                  	mov dx, 0x1f6
   168 00000107 66C1E808                	shr eax, 8
   169 0000010B 240F                    	and al, 0x0f 	; LBA 第 24 ~ 27 位
   170 0000010D 0CE0                    	or al, 0xe0 	; 设置 7 ~ 4 位为 1110, 表示 LBA 模式
   171 0000010F EE                      	out dx, al
   172                                  
   173                                  ; 3. 向 0x1f7 端口写入读命令，0x20
   174 00000110 BAF701                  	mov dx, 0x1f7
   175 00000113 B020                    	mov al, 0x20
   176 00000115 EE                      	out dx, al
   177                                  
   178                                  ; 4. 检测硬盘状态
   179 00000116 E8C3FF                  	call waitdisk
   180                                  
   181                                  ; 5. 从 0x1f0 端口读数据
   182 00000119 BAF001                  	mov dx, 0x1f0
   183 0000011C B90001                  	mov cx, 256		; 一个扇区有 512 字节，每次读入一个字，共需 512 / 2 = 256 次
   184                                  	; cld
   185                                  	; rep insw
   186                                  .go_on_read:
   187 0000011F ED                      	in ax, dx
   188 00000120 678907                  	mov [edi], ax
   189 00000123 6683C702                	add edi, 2
   190 00000127 E2F6                    	loop .go_on_read
   191 00000129 C3                      	ret
   192                                  
   193                                  waitkbdout:
   194 0000012A E464                    	in al, 0x64
   195 0000012C 2402                    	and al, 0x02
   196 0000012E E460                    	in al, 0x60 			; 空读 (为了清空数据接收缓冲区中的垃圾数据)
   197 00000130 75F8                    	jnz waitkbdout
   198 00000132 C3                      	ret
   199                                  
   200                                  memcpy:
   201 00000133 66678B06                	mov eax, [esi]
   202 00000137 6683C604                	add esi, 4
   203 0000013B 66678907                	mov [edi], eax
   204 0000013F 6683C704                	add edi, 4
   205 00000143 6649                    	dec ecx
   206 00000145 75EC                    	jnz memcpy
   207 00000147 C3                      	ret
   208                                  
   209 00000148 00<rept>                	align 16, db 0
   210                                  GDT0:
   211 00000150 00<rept>                	times 8 db 0				; NULL selector
   212 00000158 FFFF00000092CF00        	dw 		0xffff, 0x0000, 0x9200, 0x00cf	; 可以读写的段 (segment) 32bit
   213 00000160 FFFF0000289A4700        	dw 		0xffff, 0x0000, 0x9a28, 0x0047 	; 可以执行的段 (segment) 32bit (bootpack 用)
   214                                  
   215 00000168 0000                    	dw 		0
   216                                  GDTR0:
   217 0000016A 1700                    	dw 		8 * 3 - 1
   218 0000016C [50010000]              	dd 		GDT0
   219                                  
   220 00000170 00<rept>                	times 510-($-$$) db 0
   221 000001FE 55AA                    	db	0x55, 0xaa
