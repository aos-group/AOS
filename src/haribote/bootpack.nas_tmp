






global _HariMain
global keywin_off
global keywin_on
global binfo
global fifo_a
global shtctl
global nihongo
global chinese

extern change_wtitle8
extern close_console_only
extern close_constask
extern taskctl
extern close_console
extern mouse_decode
extern asm_end_app
extern task_sleep
extern io_cli
extern wait_KBC_sendready
extern fifo32_get
extern fifo32_status
extern _hankaku
extern file_loadfile2
extern file_search
extern fifo32_put
extern sheet_updown
extern sheet_slide
extern init_mouse_cursor8
extern open_console
extern init_screen
extern sheet_setbuf
extern memman_alloc_4k
extern sheet_alloc
extern task_run
extern task_init
extern shtctl_init
extern init_palette
extern file_readfat
extern memtotal
extern memman_free
extern memman_init
extern memman
extern memtest
extern io_out8
extern enable_mouse
extern init_keyboard
extern init_pit
extern fifo32_init
extern io_sti
extern init_pic
extern init_gdtidt
extern set_mode_0x13


SECTION .text   

_HariMain:
        push    ebp
        mov     ebp, esp
        push    ebx
        sub     esp, 1108
        mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        cwde
        sub     eax, 16
        sar     eax, 1
        mov     dword [ebp-10H], eax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        cwde
        sub     eax, 44
        sar     eax, 1
        mov     dword [ebp-14H], eax
        mov     dword [ebp-18H], -1
        mov     dword [ebp-1CH], 0
        mov     dword [ebp-20H], 2147483647
        mov     dword [ebp-24H], 0
        mov     dword [ebp-28H], -1
        mov     dword [ebp-2CH], -1
        mov     dword [ebp-30H], 0
        mov     dword [ebp-34H], 0
        mov     eax, dword [binfo]
        movzx   eax, byte [eax+1H]
        sar     al, 4
        movsx   eax, al
        and     eax, 07H
        mov     dword [ebp-38H], eax
        mov     dword [ebp-3CH], -1
        mov     dword [ebp-40H], 0
        mov     dword [ebp-454H], 0
        mov     dword [ebp-450H], L_063
        mov     dword [ebp-44CH], 145472
        mov     dword [ebp-448H], 0
        mov     dword [ebp-444H], L_064
        mov     dword [ebp-440H], 169536
        call    set_mode_0x13
        call    init_gdtidt
        call    init_pic
        call    io_sti
        push    0
        lea     eax, [ebp-2ACH]
        push    eax
        push    128
        push    fifo_a
        call    fifo32_init
        add     esp, 16
        push    0
        lea     eax, [ebp-32CH]
        push    eax
        push    32
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_init
        add     esp, 16
        call    init_pit
        sub     esp, 8
        push    256
        push    fifo_a
        call    init_keyboard
        add     esp, 16
        sub     esp, 4
        lea     eax, [ebp-33CH]
        push    eax
        push    512
        push    fifo_a
        call    enable_mouse
        add     esp, 16
        sub     esp, 8
        push    248
        push    33
        call    io_out8
        add     esp, 16
        sub     esp, 8
        push    239
        push    161
        call    io_out8
        add     esp, 16
        sub     esp, 8
        push    -1073741825
        push    4194304
        call    memtest
        add     esp, 16
        mov     eax, dword [memman]
        sub     esp, 12
        push    eax
        call    memman_init
        add     esp, 16
        mov     eax, dword [memman]
        sub     esp, 4
        push    647168
        push    4096
        push    eax
        call    memman_free
        add     esp, 16
        mov     eax, dword [memtotal]
        sub     eax, 4194304
        mov     edx, eax
        mov     eax, dword [memman]
        sub     esp, 4
        push    edx
        push    4194304
        push    eax
        call    memman_free
        add     esp, 16
        call    file_readfat
        call    init_palette
        mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        movsx   ebx, ax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        movsx   ecx, ax
        mov     eax, dword [binfo]
        mov     edx, dword [eax+8H]
        mov     eax, dword [memman]
        push    ebx
        push    ecx
        push    edx
        push    eax
        call    shtctl_init
        add     esp, 16
        mov     dword [shtctl], eax
        mov     eax, dword [memman]
        sub     esp, 12
        push    eax
        call    task_init
        add     esp, 16
        mov     dword [ebp-48H], eax
        mov     eax, dword [ebp-48H]
        mov     dword [fifo_a+18H], eax
        sub     esp, 4
        push    2
        push    1
        push    dword [ebp-48H]
        call    task_run
        add     esp, 16
        mov     eax, dword [ebp-48H]
        mov     byte [eax+0B8H], 0
        mov     eax, dword [shtctl]
        sub     esp, 12
        push    eax
        call    sheet_alloc
        add     esp, 16
        mov     dword [ebp-4CH], eax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        movsx   edx, ax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        cwde
        imul    eax, edx
        mov     edx, eax
        mov     eax, dword [memman]
        sub     esp, 8
        push    edx
        push    eax
        call    memman_alloc_4k
        add     esp, 16
        mov     dword [ebp-50H], eax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        movsx   edx, ax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        cwde
        sub     esp, 12
        push    -1
        push    edx
        push    eax
        push    dword [ebp-50H]
        push    dword [ebp-4CH]
        call    sheet_setbuf
        add     esp, 32
        mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        movsx   edx, ax
        mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        cwde
        sub     esp, 4
        push    edx
        push    eax
        push    dword [ebp-50H]
        call    init_screen
        add     esp, 16
        mov     eax, dword [shtctl]
        sub     esp, 12
        push    eax
        call    open_console
        add     esp, 16
        mov     dword [ebp-44H], eax
        mov     eax, dword [shtctl]
        sub     esp, 12
        push    eax
        call    sheet_alloc
        add     esp, 16
        mov     dword [ebp-54H], eax
        sub     esp, 12
        push    99
        push    16
        push    16
        lea     eax, [ebp-43CH]
        push    eax
        push    dword [ebp-54H]
        call    sheet_setbuf
        add     esp, 32
        sub     esp, 8
        push    99
        lea     eax, [ebp-43CH]
        push    eax
        call    init_mouse_cursor8
        add     esp, 16
        sub     esp, 4
        push    0
        push    0
        push    dword [ebp-4CH]
        call    sheet_slide
        add     esp, 16
        sub     esp, 4
        push    4
        push    32
        push    dword [ebp-44H]
        call    sheet_slide
        add     esp, 16
        sub     esp, 4
        push    dword [ebp-14H]
        push    dword [ebp-10H]
        push    dword [ebp-54H]
        call    sheet_slide
        add     esp, 16
        sub     esp, 8
        push    0
        push    dword [ebp-4CH]
        call    sheet_updown
        add     esp, 16
        sub     esp, 8
        push    1
        push    dword [ebp-44H]
        call    sheet_updown
        add     esp, 16
        sub     esp, 8
        push    2
        push    dword [ebp-54H]
        call    sheet_updown
        add     esp, 16
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_on
        add     esp, 16
        sub     esp, 8
        push    237
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        sub     esp, 8
        push    dword [ebp-38H]
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        mov     dword [ebp-0CH], 0
        jmp     L_010

L_001:  mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ebx, [ebp-8H]
        add     eax, ebx
        sub     eax, 1096
        mov     eax, dword [eax]
        sub     esp, 4
        push    224
        push    1058304
        push    eax
        call    file_search
        add     esp, 16
        mov     dword [ebp-58H], eax
        cmp     dword [ebp-58H], 0
        jz      L_002
        mov     eax, dword [ebp-58H]
        mov     eax, dword [eax+1CH]
        mov     dword [ebp-90H], eax
        mov     eax, dword [ebp-58H]
        movzx   eax, word [eax+1AH]
        movzx   eax, ax
        sub     esp, 8
        lea     edx, [ebp-90H]
        push    edx
        push    eax
        call    file_loadfile2
        add     esp, 16
        mov     ecx, eax
        mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ebx, [ebp-8H]
        add     eax, ebx
        sub     eax, 1100
        mov     dword [eax], ecx
        jmp     L_007

L_002:  mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ebx, [ebp-8H]
        add     eax, ebx
        sub     eax, 1092
        mov     eax, dword [eax]
        mov     edx, eax
        mov     eax, dword [memman]
        sub     esp, 8
        push    edx
        push    eax
        call    memman_alloc_4k
        add     esp, 16
        mov     ecx, eax
        mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ebx, [ebp-8H]
        add     eax, ebx
        sub     eax, 1100
        mov     dword [eax], ecx
        mov     dword [ebp-90H], 0
        jmp     L_004

L_003:  mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ecx, [ebp-8H]
        add     eax, ecx
        sub     eax, 1100
        mov     eax, dword [eax]
        mov     edx, dword [ebp-90H]
        add     edx, eax
        mov     eax, dword [ebp-90H]
        movzx   eax, byte [_hankaku+eax]
        mov     byte [edx], al
        mov     eax, dword [ebp-90H]
        add     eax, 1
        mov     dword [ebp-90H], eax
L_004:  mov     eax, dword [ebp-90H]
        cmp     eax, 4095
        jle     L_003
        jmp     L_006

L_005:  mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ebx, [ebp-8H]
        add     eax, ebx
        sub     eax, 1100
        mov     eax, dword [eax]
        mov     edx, dword [ebp-90H]
        add     eax, edx
        mov     byte [eax], -1
        mov     eax, dword [ebp-90H]
        add     eax, 1
        mov     dword [ebp-90H], eax
L_006:  mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ecx, [ebp-8H]
        add     eax, ecx
        sub     eax, 1092
        mov     edx, dword [eax]
        mov     eax, dword [ebp-90H]
        cmp     edx, eax
        jg      L_005
L_007:  cmp     dword [ebp-0CH], 0
        jnz     L_008
        mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ebx, [ebp-8H]
        add     eax, ebx
        sub     eax, 1100
        mov     eax, dword [eax]
        mov     dword [nihongo], eax
        jmp     L_009

L_008:  mov     edx, dword [ebp-0CH]
        mov     eax, edx
        add     eax, eax
        add     eax, edx
        shl     eax, 2
        lea     ecx, [ebp-8H]
        add     eax, ecx
        sub     eax, 1100
        mov     eax, dword [eax]
        mov     dword [chinese], eax
L_009:  add     dword [ebp-0CH], 1
L_010:  cmp     dword [ebp-0CH], 1
        jle     L_001
L_011:  sub     esp, 12
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_status
        add     esp, 16
        test    eax, eax
        jle     L_012
        cmp     dword [ebp-3CH], 0
        jns     L_012
        sub     esp, 12
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_get
        add     esp, 16
        mov     dword [ebp-3CH], eax
        call    wait_KBC_sendready
        sub     esp, 8
        push    dword [ebp-3CH]
        push    96
        call    io_out8
        add     esp, 16
L_012:  call    io_cli
        sub     esp, 12
        push    fifo_a
        call    fifo32_status
        add     esp, 16
        test    eax, eax
        jnz     L_015
        cmp     dword [ebp-18H], 0
        js      L_013
        call    io_sti
        sub     esp, 4
        push    dword [ebp-1CH]
        push    dword [ebp-18H]
        push    dword [ebp-54H]
        call    sheet_slide
        add     esp, 16
        mov     dword [ebp-18H], -1
        jmp     L_011

L_013:  cmp     dword [ebp-20H], 2147483647
        jz      L_014
        call    io_sti
        sub     esp, 4
        push    dword [ebp-24H]
        push    dword [ebp-20H]
        push    dword [ebp-40H]
        call    sheet_slide
        add     esp, 16
        mov     dword [ebp-20H], 2147483647
        jmp     L_011

L_014:  sub     esp, 12
        push    dword [ebp-48H]
        call    task_sleep
        add     esp, 16
        call    io_sti
        jmp     L_011

L_015:  sub     esp, 12
        push    fifo_a
        call    fifo32_get
        add     esp, 16
        mov     dword [ebp-90H], eax
        call    io_sti
        cmp     dword [ebp-44H], 0
        jz      L_017
        mov     eax, dword [ebp-44H]
        mov     eax, dword [eax+1CH]
        test    eax, eax
        jnz     L_017
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        cmp     eax, 1
        jnz     L_016
        mov     dword [ebp-44H], 0
        jmp     L_017

L_016:  mov     eax, dword [shtctl]
        mov     edx, dword [shtctl]
        mov     edx, dword [edx+10H]
        sub     edx, 1
        add     edx, 4
        mov     eax, dword [eax+edx*4+4H]
        mov     dword [ebp-44H], eax
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_on
        add     esp, 16
L_017:  mov     eax, dword [ebp-90H]
        cmp     eax, 255
        jle     L_041
        mov     eax, dword [ebp-90H]
        cmp     eax, 511
        jg      L_041
        mov     eax, dword [ebp-90H]
        cmp     eax, 383
        jg      L_019
        cmp     dword [ebp-34H], 0
        jz      L_018
        mov     eax, dword [ebp-90H]
        sub     eax, 256
        movzx   eax, byte [keytable1.2102+eax]
        mov     byte [ebp-8CH], al
        jmp     L_020

L_018:  mov     eax, dword [ebp-90H]
        sub     eax, 256
        movzx   eax, byte [keytable0.2101+eax]
        mov     byte [ebp-8CH], al
        jmp     L_020

L_019:  mov     byte [ebp-8CH], 0
L_020:  movzx   eax, byte [ebp-8CH]
        cmp     al, 64
        jle     L_023
        movzx   eax, byte [ebp-8CH]
        cmp     al, 90
        jg      L_023
        mov     eax, dword [ebp-38H]
        and     eax, 04H
        test    eax, eax
        jnz     L_021
        cmp     dword [ebp-34H], 0
        jz      L_022
L_021:  mov     eax, dword [ebp-38H]
        and     eax, 04H
        test    eax, eax
        jz      L_023
        cmp     dword [ebp-34H], 0
        jz      L_023
L_022:  movzx   eax, byte [ebp-8CH]
        add     eax, 32
        mov     byte [ebp-8CH], al
L_023:  movzx   eax, byte [ebp-8CH]
        test    al, al
        jz      L_024
        cmp     dword [ebp-44H], 0
        jz      L_024
        movzx   eax, byte [ebp-8CH]
        movsx   eax, al
        lea     edx, [eax+100H]
        mov     eax, dword [ebp-44H]
        mov     eax, dword [eax+24H]
        add     eax, 16
        sub     esp, 8
        push    edx
        push    eax
        call    fifo32_put
        add     esp, 16
        jmp     L_040

L_024:  mov     eax, dword [ebp-90H]
        cmp     eax, 271
        jnz     L_026
        cmp     dword [ebp-44H], 0
        jz      L_026
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_off
        add     esp, 16
        mov     eax, dword [ebp-44H]
        mov     eax, dword [eax+18H]
        sub     eax, 1
        mov     dword [ebp-0CH], eax
        cmp     dword [ebp-0CH], 0
        jnz     L_025
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        sub     eax, 1
        mov     dword [ebp-0CH], eax
L_025:  mov     eax, dword [shtctl]
        mov     edx, dword [ebp-0CH]
        add     edx, 4
        mov     eax, dword [eax+edx*4+4H]
        mov     dword [ebp-44H], eax
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_on
        add     esp, 16
        jmp     L_040

L_026:  mov     eax, dword [ebp-90H]
        cmp     eax, 298
        jnz     L_027
        or      dword [ebp-34H], 01H
        jmp     L_058

L_027:  mov     eax, dword [ebp-90H]
        cmp     eax, 310
        jnz     L_028
        or      dword [ebp-34H], 02H
        jmp     L_058

L_028:  mov     eax, dword [ebp-90H]
        cmp     eax, 426
        jnz     L_029
        and     dword [ebp-34H], 0FFFFFFFEH
        jmp     L_058

L_029:  mov     eax, dword [ebp-90H]
        cmp     eax, 438
        jnz     L_030
        and     dword [ebp-34H], 0FFFFFFFDH
        jmp     L_058

L_030:  mov     eax, dword [ebp-90H]
        cmp     eax, 314
        jnz     L_031
        xor     dword [ebp-38H], 04H
        sub     esp, 8
        push    237
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        sub     esp, 8
        push    dword [ebp-38H]
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        jmp     L_058

L_031:  mov     eax, dword [ebp-90H]
        cmp     eax, 325
        jnz     L_032
        xor     dword [ebp-38H], 02H
        sub     esp, 8
        push    237
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        sub     esp, 8
        push    dword [ebp-38H]
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        jmp     L_058

L_032:  mov     eax, dword [ebp-90H]
        cmp     eax, 326
        jnz     L_033
        xor     dword [ebp-38H], 01H
        sub     esp, 8
        push    237
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        sub     esp, 8
        push    dword [ebp-38H]
        lea     eax, [ebp-0ACH]
        push    eax
        call    fifo32_put
        add     esp, 16
        jmp     L_058

L_033:  mov     eax, dword [ebp-90H]
        cmp     eax, 506
        jnz     L_034
        mov     dword [ebp-3CH], -1
        jmp     L_058

L_034:  mov     eax, dword [ebp-90H]
        cmp     eax, 510
        jnz     L_035
        call    wait_KBC_sendready
        sub     esp, 8
        push    dword [ebp-3CH]
        push    96
        call    io_out8
        add     esp, 16
        jmp     L_058

L_035:  mov     eax, dword [ebp-90H]
        cmp     eax, 315
        jnz     L_036
        cmp     dword [ebp-34H], 0
        jz      L_036
        cmp     dword [ebp-44H], 0
        jz      L_036
        mov     eax, dword [ebp-44H]
        mov     eax, dword [eax+24H]
        mov     dword [ebp-5CH], eax
        cmp     dword [ebp-5CH], 0
        je      L_039
        mov     eax, dword [ebp-5CH]
        mov     eax, dword [eax+34H]
        test    eax, eax
        je      L_039
        call    io_cli
        mov     eax, dword [ebp-5CH]
        add     eax, 48
        mov     edx, eax
        mov     eax, dword [ebp-5CH]
        mov     dword [eax+54H], edx
        mov     edx, asm_end_app
        mov     eax, dword [ebp-5CH]
        mov     dword [eax+4CH], edx
        call    io_sti
        sub     esp, 4
        push    0
        push    -1
        push    dword [ebp-5CH]
        call    task_run
        add     esp, 16
        jmp     L_039

L_036:  mov     eax, dword [ebp-90H]
        cmp     eax, 316
        jnz     L_038
        cmp     dword [ebp-34H], 0
        jz      L_038
        cmp     dword [ebp-44H], 0
        jz      L_037
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_off
        add     esp, 16
L_037:  mov     eax, dword [shtctl]
        sub     esp, 12
        push    eax
        call    open_console
        add     esp, 16
        mov     dword [ebp-44H], eax
        sub     esp, 4
        push    4
        push    32
        push    dword [ebp-44H]
        call    sheet_slide
        add     esp, 16
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        sub     esp, 8
        push    eax
        push    dword [ebp-44H]
        call    sheet_updown
        add     esp, 16
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_on
        add     esp, 16
        jmp     L_040

L_038:  mov     eax, dword [ebp-90H]
        cmp     eax, 343
        jne     L_058
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        cmp     eax, 2
        jle     L_058
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        lea     edx, [eax-1H]
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+18H]
        sub     esp, 8
        push    edx
        push    eax
        call    sheet_updown
        add     esp, 16
        jmp     L_058

L_039:  nop
L_040:  jmp     L_058

L_041:  mov     eax, dword [ebp-90H]
        cmp     eax, 511
        jle     L_055
        mov     eax, dword [ebp-90H]
        cmp     eax, 767
        jg      L_055
        mov     eax, dword [ebp-90H]
        movzx   eax, al
        sub     esp, 8
        push    eax
        lea     eax, [ebp-33CH]
        push    eax
        call    mouse_decode
        add     esp, 16
        test    eax, eax
        je      L_059
        mov     eax, dword [ebp-338H]
        add     dword [ebp-10H], eax
        mov     eax, dword [ebp-334H]
        add     dword [ebp-14H], eax
        cmp     dword [ebp-10H], 0
        jns     L_042
        mov     dword [ebp-10H], 0
L_042:  cmp     dword [ebp-14H], 0
        jns     L_043
        mov     dword [ebp-14H], 0
L_043:  mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        cwde
        sub     eax, 1
        cmp     eax, dword [ebp-10H]
        jge     L_044
        mov     eax, dword [binfo]
        movzx   eax, word [eax+4H]
        cwde
        sub     eax, 1
        mov     dword [ebp-10H], eax
L_044:  mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        cwde
        sub     eax, 1
        cmp     eax, dword [ebp-14H]
        jge     L_045
        mov     eax, dword [binfo]
        movzx   eax, word [eax+6H]
        cwde
        sub     eax, 1
        mov     dword [ebp-14H], eax
L_045:  mov     eax, dword [ebp-10H]
        mov     dword [ebp-18H], eax
        mov     eax, dword [ebp-14H]
        mov     dword [ebp-1CH], eax
        mov     eax, dword [ebp-330H]
        and     eax, 01H
        test    eax, eax
        je      L_053
        cmp     dword [ebp-28H], 0
        jns     L_052
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        sub     eax, 1
        mov     dword [ebp-0CH], eax
        jmp     L_051

L_046:  mov     eax, dword [shtctl]
        mov     edx, dword [ebp-0CH]
        add     edx, 4
        mov     eax, dword [eax+edx*4+4H]
        mov     dword [ebp-40H], eax
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+0CH]
        mov     edx, dword [ebp-10H]
        sub     edx, eax
        mov     eax, edx
        mov     dword [ebp-60H], eax
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+10H]
        mov     edx, dword [ebp-14H]
        sub     edx, eax
        mov     eax, edx
        mov     dword [ebp-64H], eax
        cmp     dword [ebp-60H], 0
        js      L_050
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+4H]
        cmp     eax, dword [ebp-60H]
        jle     L_050
        cmp     dword [ebp-64H], 0
        js      L_050
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+8H]
        cmp     eax, dword [ebp-64H]
        jle     L_050
        mov     eax, dword [ebp-40H]
        mov     edx, dword [eax]
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+4H]
        add     eax, 1
        imul    eax, dword [ebp-64H]
        add     eax, edx
        movzx   eax, byte [eax]
        movzx   edx, al
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+14H]
        cmp     edx, eax
        je      L_050
        mov     eax, dword [shtctl]
        mov     eax, dword [eax+10H]
        sub     eax, 1
        sub     esp, 8
        push    eax
        push    dword [ebp-40H]
        call    sheet_updown
        add     esp, 16
        mov     eax, dword [ebp-40H]
        cmp     eax, dword [ebp-44H]
        jz      L_047
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_off
        add     esp, 16
        mov     eax, dword [ebp-40H]
        mov     dword [ebp-44H], eax
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_on
        add     esp, 16
L_047:  cmp     dword [ebp-60H], 2
        jle     L_048
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+4H]
        sub     eax, 3
        cmp     eax, dword [ebp-60H]
        jle     L_048
        cmp     dword [ebp-64H], 2
        jle     L_048
        cmp     dword [ebp-64H], 20
        jg      L_048
        mov     eax, dword [ebp-10H]
        mov     dword [ebp-28H], eax
        mov     eax, dword [ebp-14H]
        mov     dword [ebp-2CH], eax
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+0CH]
        mov     dword [ebp-30H], eax
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+10H]
        mov     dword [ebp-24H], eax
L_048:  mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+4H]
        sub     eax, 21
        cmp     eax, dword [ebp-60H]
        jg      L_054
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+4H]
        sub     eax, 5
        cmp     eax, dword [ebp-60H]
        jle     L_054
        cmp     dword [ebp-64H], 4
        jle     L_054
        cmp     dword [ebp-64H], 18
        jg      L_054
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+1CH]
        and     eax, 10H
        test    eax, eax
        jz      L_049
        mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+24H]
        mov     dword [ebp-5CH], eax
        call    io_cli
        mov     eax, dword [ebp-5CH]
        add     eax, 48
        mov     edx, eax
        mov     eax, dword [ebp-5CH]
        mov     dword [eax+54H], edx
        mov     edx, asm_end_app
        mov     eax, dword [ebp-5CH]
        mov     dword [eax+4CH], edx
        call    io_sti
        sub     esp, 4
        push    0
        push    -1
        push    dword [ebp-5CH]
        call    task_run
        add     esp, 16
        jmp     L_054

L_049:  mov     eax, dword [ebp-40H]
        mov     eax, dword [eax+24H]
        mov     dword [ebp-5CH], eax
        sub     esp, 8
        push    -1
        push    dword [ebp-40H]
        call    sheet_updown
        add     esp, 16
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_off
        add     esp, 16
        mov     eax, dword [shtctl]
        mov     edx, dword [shtctl]
        mov     edx, dword [edx+10H]
        sub     edx, 1
        add     edx, 4
        mov     eax, dword [eax+edx*4+4H]
        mov     dword [ebp-44H], eax
        sub     esp, 12
        push    dword [ebp-44H]
        call    keywin_on
        add     esp, 16
        call    io_cli
        mov     eax, dword [ebp-5CH]
        add     eax, 16
        sub     esp, 8
        push    4
        push    eax
        call    fifo32_put
        add     esp, 16
        call    io_sti
        jmp     L_054

L_050:  sub     dword [ebp-0CH], 1
L_051:  cmp     dword [ebp-0CH], 0
        jg      L_046
        jmp     L_059

L_052:  mov     eax, dword [ebp-10H]
        sub     eax, dword [ebp-28H]
        mov     dword [ebp-60H], eax
        mov     eax, dword [ebp-14H]
        sub     eax, dword [ebp-2CH]
        mov     dword [ebp-64H], eax
        mov     edx, dword [ebp-30H]
        mov     eax, dword [ebp-60H]
        add     eax, edx
        add     eax, 2
        and     eax, 0FFFFFFFCH
        mov     dword [ebp-20H], eax
        mov     eax, dword [ebp-64H]
        add     dword [ebp-24H], eax
        mov     eax, dword [ebp-14H]
        mov     dword [ebp-2CH], eax
        jmp     L_059

L_053:  mov     dword [ebp-28H], -1
        cmp     dword [ebp-20H], 2147483647
        je      L_059
        sub     esp, 4
        push    dword [ebp-24H]
        push    dword [ebp-20H]
        push    dword [ebp-40H]
        call    sheet_slide
        add     esp, 16
        mov     dword [ebp-20H], 2147483647
        jmp     L_059

L_054:  nop
        jmp     L_059

L_055:  mov     eax, dword [ebp-90H]
        cmp     eax, 767
        jle     L_056
        mov     eax, dword [ebp-90H]
        cmp     eax, 1023
        jg      L_056
        mov     eax, dword [shtctl]
        lea     ecx, [eax+414H]
        mov     eax, dword [ebp-90H]
        mov     edx, eax
        mov     eax, edx
        shl     eax, 2
        add     eax, edx
        shl     eax, 3
        sub     eax, 30720
        add     eax, ecx
        sub     esp, 12
        push    eax
        call    close_console
        add     esp, 16
        jmp     L_060

L_056:  mov     eax, dword [ebp-90H]
        cmp     eax, 1023
        jle     L_057
        mov     eax, dword [ebp-90H]
        cmp     eax, 2023
        jg      L_057
        mov     eax, dword [taskctl]
        lea     edx, [eax+0FF8H]
        mov     eax, dword [ebp-90H]
        imul    eax, eax, 188
        sub     eax, 192512
        add     eax, edx
        sub     esp, 12
        push    eax
        call    close_constask
        add     esp, 16
        jmp     L_060

L_057:  mov     eax, dword [ebp-90H]
        cmp     eax, 2023
        jle     L_011
        mov     eax, dword [ebp-90H]
        cmp     eax, 2279
        jg      L_011
        mov     eax, dword [shtctl]
        lea     ecx, [eax+414H]
        mov     eax, dword [ebp-90H]
        mov     edx, eax
        mov     eax, edx
        shl     eax, 2
        add     eax, edx
        shl     eax, 3
        sub     eax, 80960
        add     eax, ecx
        sub     esp, 12
        push    eax
        call    close_console_only
        add     esp, 16
        jmp     L_011

L_058:  nop
        jmp     L_011

L_059:  nop
L_060:  jmp     L_011


keywin_off:
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        sub     esp, 8
        push    0
        push    dword [ebp+8H]
        call    change_wtitle8
        add     esp, 16
        mov     eax, dword [ebp+8H]
        mov     eax, dword [eax+1CH]
        and     eax, 20H
        test    eax, eax
        jz      L_061
        mov     eax, dword [ebp+8H]
        mov     eax, dword [eax+24H]
        add     eax, 16
        sub     esp, 8
        push    3
        push    eax
        call    fifo32_put
        add     esp, 16
L_061:  nop
        leave
        ret


keywin_on:
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        sub     esp, 8
        push    1
        push    dword [ebp+8H]
        call    change_wtitle8
        add     esp, 16
        mov     eax, dword [ebp+8H]
        mov     eax, dword [eax+1CH]
        and     eax, 20H
        test    eax, eax
        jz      L_062
        mov     eax, dword [ebp+8H]
        mov     eax, dword [eax+24H]
        add     eax, 16
        sub     esp, 8
        push    2
        push    eax
        call    fifo32_put
        add     esp, 16
L_062:  nop
        leave
        ret



SECTION .data   align 32

binfo:
        dd 00000FF0H, 00000000H
        dd 00000000H, 00000000H
        dd 00000000H, 00000000H
        dd 00000000H, 00000000H

keytable1.2102:
        db 00H, 00H, 21H, 40H, 23H, 24H, 25H, 5EH
        db 26H, 2AH, 28H, 29H, 5FH, 2BH, 08H, 00H
        db 51H, 57H, 45H, 52H, 54H, 59H, 55H, 49H
        db 4FH, 50H, 7BH, 7DH, 0AH, 00H, 41H, 53H
        db 44H, 46H, 47H, 48H, 4AH, 4BH, 4CH, 3AH
        db 22H, 7EH, 00H, 7CH, 5AH, 58H, 43H, 56H
        db 42H, 4EH, 4DH, 3CH, 3EH, 3FH, 00H, 2AH
        db 00H, 20H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 37H
        db 38H, 39H, 2DH, 34H, 35H, 36H, 2BH, 31H
        db 32H, 33H, 30H, 2EH, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 5FH, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 7CH, 00H, 00H

keytable0.2101:
        db 00H, 00H, 31H, 32H, 33H, 34H, 35H, 36H
        db 37H, 38H, 39H, 30H, 2DH, 3DH, 08H, 00H
        db 51H, 57H, 45H, 52H, 54H, 59H, 55H, 49H
        db 4FH, 50H, 5BH, 5DH, 0AH, 00H, 41H, 53H
        db 44H, 46H, 47H, 48H, 4AH, 4BH, 4CH, 3BH
        db 27H, 60H, 00H, 5CH, 5AH, 58H, 43H, 56H
        db 42H, 4EH, 4DH, 2CH, 2EH, 2FH, 00H, 2AH
        db 00H, 20H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 37H
        db 38H, 39H, 2DH, 34H, 35H, 36H, 2BH, 31H
        db 32H, 33H, 30H, 2EH, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 5CH, 00H, 00H, 00H, 00H
        db 00H, 00H, 00H, 00H, 00H, 5CH, 00H, 00H


SECTION .bss    align 4

fifo_a:
        resd    7

shtctl: resd    1

nihongo: resd   1

chinese: resd   1


SECTION .rodata 

L_063:
        db 6EH, 69H, 68H, 6FH, 6EH, 67H, 6FH, 2EH
        db 66H, 6EH, 74H, 00H

L_064:
        db 63H, 68H, 69H, 6EH, 65H, 73H, 65H, 2EH
        db 66H, 6EH, 74H, 00H


