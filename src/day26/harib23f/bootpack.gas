	.file	"bootpack.c"
.globl _binfo
	.data
	.balign 4
_binfo:
	.long	4080
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC1:
	.ascii "\12Break(mouse):\12\0"
LC0:
	.ascii "\12Break(key):\12\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-44(%ebp), %ebx
	subl	$1100, %esp
	movl	_binfo, %edx
	movl	$-1, -1048(%ebp)
	movswl	4(%edx),%eax
	subl	$16, %eax
	sarl	%eax
	movl	%eax, -1040(%ebp)
	movswl	6(%edx),%eax
	subl	$44, %eax
	sarl	%eax
	movl	%eax, -1044(%ebp)
	movl	$0, -1052(%ebp)
	movl	$2147483647, -1056(%ebp)
	movl	$0, -1060(%ebp)
	movl	$0, -1080(%ebp)
	movb	1(%edx), %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1084(%ebp)
	movl	$-1, -1088(%ebp)
	movl	$-1, -1092(%ebp)
	movl	$-1, -1096(%ebp)
	movl	$0, -1100(%ebp)
	movl	$0, -1104(%ebp)
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-636(%ebp), %eax
	pushl	$0
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo32_init
	leal	-764(%ebp), %eax
	pushl	$0
	pushl	%eax
	leal	-76(%ebp), %eax
	pushl	$32
	pushl	%eax
	call	_fifo32_init
	addl	$32, %esp
	call	_init_pit
	pushl	$256
	pushl	%ebx
	call	_init_keyboard
	leal	-780(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%ebx
	call	_enable_mouse
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	addl	$36, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	_memman
	movl	%eax, -1064(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	_memman
	call	_memman_free
	movl	-1064(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	_memman
	call	_memman_free
	addl	$36, %esp
	call	_init_palette
	movl	_binfo, %edx
	movswl	6(%edx),%eax
	pushl	%eax
	movswl	4(%edx),%eax
	pushl	%eax
	pushl	8(%edx)
	pushl	_memman
	call	_shtctl_init
	movl	%eax, 4068
	pushl	_memman
	movl	%eax, -1068(%ebp)
	call	_task_init
	pushl	$2
	pushl	$1
	movl	%eax, -1076(%ebp)
	pushl	%eax
	movl	%eax, -20(%ebp)
	call	_task_run
	addl	$32, %esp
	pushl	-1068(%ebp)
	call	_sheet_alloc
	movl	_binfo, %edx
	movl	%eax, %esi
	movswl	4(%edx),%eax
	movswl	6(%edx),%edx
	imull	%edx, %eax
	pushl	%eax
	pushl	_memman
	call	_memman_alloc_4k
	movl	_binfo, %edx
	pushl	$-1
	movl	%eax, %ebx
	movswl	6(%edx),%eax
	pushl	%eax
	movswl	4(%edx),%eax
	pushl	%eax
	pushl	%ebx
	pushl	%esi
	call	_sheet_setbuf
	movl	_binfo, %edx
	addl	$32, %esp
	movswl	6(%edx),%eax
	pushl	%eax
	movswl	4(%edx),%eax
	pushl	%eax
	pushl	%ebx
	leal	-1036(%ebp), %ebx
	call	_init_screen
	pushl	-1064(%ebp)
	pushl	-1068(%ebp)
	call	_open_console
	pushl	-1068(%ebp)
	movl	%eax, %edi
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	movl	%eax, -1072(%ebp)
	pushl	$16
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$44, %esp
	pushl	$99
	pushl	%ebx
	call	_init_mouse_cursor8
	pushl	$0
	pushl	$0
	pushl	%esi
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	%edi
	call	_sheet_slide
	addl	$32, %esp
	pushl	-1044(%ebp)
	pushl	-1040(%ebp)
	pushl	-1072(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	%esi
	call	_sheet_updown
	pushl	$1
	pushl	%edi
	call	_sheet_updown
	pushl	$2
	pushl	-1072(%ebp)
	call	_sheet_updown
	addl	$36, %esp
	pushl	%edi
	call	_keywin_on
	leal	-76(%ebp), %edx
	pushl	$237
	pushl	%edx
	call	_fifo32_put
	leal	-76(%ebp), %eax
	pushl	-1084(%ebp)
	pushl	%eax
	call	_fifo32_put
	addl	$20, %esp
L74:
	leal	-76(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%ecx
	testl	%eax, %eax
	jle	L5
	cmpl	$0, -1088(%ebp)
	js	L86
L5:
	leal	-44(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	je	L87
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, %ebx
	call	_io_sti
	popl	%eax
	cmpl	$0, 28(%edi)
	jne	L12
	movl	-1068(%ebp), %edx
	movl	16(%edx), %eax
	movl	16(%edx,%eax,4), %edi
	pushl	%edi
	call	_keywin_on
	popl	%eax
L12:
	leal	-256(%ebx), %eax
	cmpl	$255, %eax
	jbe	L88
	leal	-512(%ebx), %eax
	cmpl	$255, %eax
	ja	L74
	movzbl	%bl, %eax
	pushl	%eax
	leal	-780(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%ecx
	popl	%ebx
	testl	%eax, %eax
	je	L74
	movl	-772(%ebp), %eax
	movl	-776(%ebp), %edx
	addl	%eax, -1044(%ebp)
	addl	%edx, -1040(%ebp)
	js	L89
L54:
	cmpl	$0, -1044(%ebp)
	js	L90
L55:
	movl	_binfo, %edx
	movswl	4(%edx),%eax
	decl	%eax
	cmpl	%eax, -1040(%ebp)
	jle	L56
	movl	%eax, -1040(%ebp)
L56:
	movswl	6(%edx),%eax
	decl	%eax
	cmpl	%eax, -1044(%ebp)
	jle	L57
	movl	%eax, -1044(%ebp)
L57:
	movl	-1040(%ebp), %eax
	movl	-1044(%ebp), %edx
	movl	%eax, -1048(%ebp)
	movl	%edx, -1052(%ebp)
	testl	$1, -768(%ebp)
	jne	L91
	movl	$-1, -1092(%ebp)
	cmpl	$2147483647, -1056(%ebp)
	je	L74
L81:
	pushl	-1060(%ebp)
	pushl	-1056(%ebp)
	pushl	-1104(%ebp)
	call	_sheet_slide
	movl	$2147483647, -1056(%ebp)
L82:
	addl	$12, %esp
	jmp	L74
L91:
	cmpl	$0, -1092(%ebp)
	js	L92
	movl	-1040(%ebp), %esi
	movl	-1100(%ebp), %eax
	subl	-1092(%ebp), %esi
	movl	-1044(%ebp), %ebx
	subl	-1096(%ebp), %ebx
	movl	-1044(%ebp), %edx
	leal	2(%esi,%eax), %esi
	movl	%edx, -1096(%ebp)
	movl	%esi, -1056(%ebp)
	addl	%ebx, -1060(%ebp)
	andl	$-4, -1056(%ebp)
	jmp	L74
L92:
	movl	-1068(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -1108(%ebp)
	movl	%eax, %ecx
L84:
	decl	%ecx
	testl	%ecx, %ecx
	jle	L74
	movl	-1068(%ebp), %edx
	movl	-1044(%ebp), %ebx
	movl	-1040(%ebp), %esi
	movl	20(%edx,%ecx,4), %edx
	movl	%edx, -1104(%ebp)
	subl	16(%edx), %ebx
	subl	12(%edx), %esi
	js	L84
	movl	4(%edx), %eax
	cmpl	%eax, %esi
	jge	L84
	testl	%ebx, %ebx
	js	L84
	cmpl	8(%edx), %ebx
	jge	L84
	imull	%ebx, %eax
	movl	%eax, -1112(%ebp)
	movl	(%edx), %edx
	movl	-1112(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax,%edx), %eax
	movl	-1104(%ebp), %edx
	cmpl	20(%edx), %eax
	je	L84
	movl	-1108(%ebp), %eax
	decl	%eax
	pushl	%eax
	pushl	%edx
	call	_sheet_updown
	cmpl	%edi, -1104(%ebp)
	popl	%eax
	popl	%edx
	je	L66
	pushl	%edi
	call	_keywin_off
	movl	-1104(%ebp), %edi
	pushl	%edi
	call	_keywin_on
	popl	%ecx
	popl	%eax
L66:
	cmpl	$2, %esi
	jle	L67
	movl	-1104(%ebp), %edx
	movl	4(%edx), %eax
	subl	$3, %eax
	cmpl	%eax, %esi
	jge	L67
	cmpl	$2, %ebx
	jle	L67
	cmpl	$20, %ebx
	jg	L67
	movl	-1040(%ebp), %eax
	movl	-1044(%ebp), %edx
	movl	%eax, -1092(%ebp)
	movl	%edx, -1096(%ebp)
	movl	-1104(%ebp), %eax
	movl	-1104(%ebp), %edx
	movl	12(%eax), %eax
	movl	16(%edx), %edx
	movl	%eax, -1100(%ebp)
	movl	%edx, -1060(%ebp)
L67:
	movl	-1104(%ebp), %eax
	movl	4(%eax), %edx
	leal	-21(%edx), %eax
	cmpl	%esi, %eax
	jg	L74
	leal	-5(%edx), %eax
	cmpl	%eax, %esi
	jge	L74
	cmpl	$4, %ebx
	jle	L74
	cmpl	$18, %ebx
	jg	L74
	movl	-1104(%ebp), %edx
	testb	$16, 28(%edx)
	je	L74
	movl	36(%edx), %ebx
	pushl	$LC1
L85:
	pushl	148(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
L77:
	popl	%eax
	popl	%edx
	jmp	L74
L90:
	movl	$0, -1044(%ebp)
	jmp	L55
L89:
	movl	$0, -1040(%ebp)
	jmp	L54
L88:
	cmpl	$383, %ebx
	jg	L14
	cmpl	$0, -1080(%ebp)
	je	L15
	movb	_keytable1.1-256(%ebx), %al
L83:
	movb	%al, -124(%ebp)
L17:
	movb	-124(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L18
	testl	$4, -1084(%ebp)
	jne	L76
	cmpl	$0, -1080(%ebp)
	je	L20
L18:
	movb	-124(%ebp), %al
	testb	%al, %al
	jne	L93
	cmpl	$271, %ebx
	je	L94
	cmpl	$298, %ebx
	je	L95
	cmpl	$310, %ebx
	je	L96
	cmpl	$426, %ebx
	je	L97
	cmpl	$438, %ebx
	je	L98
	cmpl	$314, %ebx
	je	L99
	cmpl	$325, %ebx
	je	L100
	cmpl	$326, %ebx
	je	L101
	cmpl	$506, %ebx
	je	L102
	cmpl	$510, %ebx
	je	L103
	cmpl	$315, %ebx
	jne	L45
	cmpl	$0, -1080(%ebp)
	jne	L104
L45:
	cmpl	$316, %ebx
	jne	L48
	cmpl	$0, -1080(%ebp)
	jne	L105
L48:
	cmpl	$343, %ebx
	jne	L74
	movl	-1068(%ebp), %edx
	movl	16(%edx), %eax
	cmpl	$2, %eax
	jle	L74
	decl	%eax
	pushl	%eax
	pushl	24(%edx)
	call	_sheet_updown
	jmp	L77
L105:
	pushl	%edi
	call	_keywin_off
	pushl	-1064(%ebp)
	pushl	-1068(%ebp)
	call	_open_console
	pushl	$4
	pushl	$32
	movl	%eax, %edi
	pushl	%eax
	call	_sheet_slide
	movl	-1068(%ebp), %eax
	pushl	16(%eax)
	pushl	%edi
	call	_sheet_updown
	addl	$32, %esp
L79:
	pushl	%edi
	call	_keywin_on
L80:
	popl	%esi
	jmp	L74
L104:
	movl	36(%edi), %ebx
	testl	%ebx, %ebx
	je	L74
	cmpl	$0, 52(%ebx)
	je	L74
	pushl	$LC0
	jmp	L85
L103:
	call	_wait_KBC_sendready
	pushl	-1088(%ebp)
	pushl	$96
	call	_io_out8
	jmp	L77
L102:
	movl	$-1, -1088(%ebp)
	jmp	L74
L101:
	xorl	$1, -1084(%ebp)
L78:
	pushl	$237
	leal	-76(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_put
	pushl	-1084(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L74
L100:
	xorl	$2, -1084(%ebp)
	jmp	L78
L99:
	xorl	$4, -1084(%ebp)
	jmp	L78
L98:
	andl	$-3, -1080(%ebp)
	jmp	L74
L97:
	andl	$-2, -1080(%ebp)
	jmp	L74
L96:
	orl	$2, -1080(%ebp)
	jmp	L74
L95:
	orl	$1, -1080(%ebp)
	jmp	L74
L94:
	pushl	%edi
	call	_keywin_off
	movl	24(%edi), %ecx
	decl	%ecx
	popl	%eax
	jne	L25
	movl	-1068(%ebp), %eax
	movl	16(%eax), %ecx
	decl	%ecx
L25:
	movl	-1068(%ebp), %edx
	movl	20(%edx,%ecx,4), %edi
	jmp	L79
L93:
	movsbl	%al,%eax
	addl	$256, %eax
	pushl	%eax
	movl	36(%edi), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	jmp	L77
L20:
	leal	32(%edx), %eax
	movb	%al, -124(%ebp)
	jmp	L18
L76:
	cmpl	$0, -1080(%ebp)
	je	L18
	jmp	L20
L15:
	movb	_keytable0.0-256(%ebx), %al
	jmp	L83
L14:
	movb	$0, -124(%ebp)
	jmp	L17
L87:
	cmpl	$0, -1048(%ebp)
	jns	L106
	cmpl	$2147483647, -1056(%ebp)
	jne	L107
	pushl	-1076(%ebp)
	call	_task_sleep
	call	_io_sti
	jmp	L80
L107:
	call	_io_sti
	jmp	L81
L106:
	call	_io_sti
	pushl	-1052(%ebp)
	pushl	-1048(%ebp)
	pushl	-1072(%ebp)
	call	_sheet_slide
	movl	$-1, -1048(%ebp)
	jmp	L82
L86:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1088(%ebp)
	call	_wait_KBC_sendready
	pushl	-1088(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L5
	.balign 2
.globl _keywin_off
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
_keywin_off:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$0
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%eax
	popl	%edx
	jne	L110
L108:
	movl	-4(%ebp), %ebx
	leave
	ret
L110:
	pushl	$3
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%ebx
	popl	%eax
	jmp	L108
	.balign 2
.globl _keywin_on
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
_keywin_on:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$1
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%eax
	popl	%edx
	jne	L113
L111:
	movl	-4(%ebp), %ebx
	leave
	ret
L113:
	pushl	$2
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
	jmp	L111
	.data
LC2:
	.ascii "console\0"
	.text
	.balign 2
.globl _open_console
	.def	_open_console;	.scl	2;	.type	32;	.endef
_open_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%ecx
	pushl	8(%ebp)
	call	_sheet_alloc
	pushl	$42240
	pushl	_memman
	movl	%eax, %ebx
	call	_memman_alloc_4k
	movl	%eax, %esi
	call	_task_alloc
	pushl	$512
	movl	%eax, %edi
	pushl	_memman
	call	_memman_alloc_4k
	pushl	$-1
	pushl	$165
	pushl	$256
	movl	%eax, -16(%ebp)
	pushl	%esi
	pushl	%ebx
	call	_sheet_setbuf
	addl	$40, %esp
	pushl	$0
	pushl	$LC2
	pushl	$165
	pushl	$256
	pushl	%esi
	call	_make_window8
	pushl	$0
	pushl	$128
	pushl	$240
	pushl	$28
	pushl	$8
	pushl	%ebx
	call	_make_textbox8
	addl	$44, %esp
	pushl	$65536
	pushl	_memman
	call	_memman_alloc_4k
	addl	$65524, %eax
	movl	%eax, 100(%edi)
	movl	$_console_task, 76(%edi)
	movl	$8, 116(%edi)
	movl	$16, 120(%edi)
	movl	$8, 124(%edi)
	movl	$8, 128(%edi)
	movl	$8, 132(%edi)
	movl	$8, 136(%edi)
	movl	%ebx, 4(%eax)
	movl	100(%edi), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	pushl	$2
	pushl	$2
	pushl	%edi
	call	_task_run
	leal	16(%edi), %eax
	movl	%edi, 36(%ebx)
	orl	$32, 28(%ebx)
	pushl	%edi
	pushl	-16(%ebp)
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	leal	-12(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_change_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_asm_end_app;	.scl	2;	.type	32;	.endef
	.def	_cons_putstr0;	.scl	2;	.type	32;	.endef
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_open_console;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
